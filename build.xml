<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>

<project name="GroupManager" default="jar" basedir=".">
	<property name="build" value="bin" />
	<property file="build.properties" />
	<property environment="env"/>

	<target name="clean">
		<delete dir="${build}" />
	</target>

	<target name="init" depends="clean">
		<!-- Ensure our source and destination folders exist -->
		<mkdir dir="${build}" />
		<mkdir dir="${env.LIB}" />

	</target>

	<target name="download" depends="init">
		<!-- Download any missing libraries -->
		<get src="${env.SRC}/annotations-19.0.0.jar" dest="${env.LIB}/annotations-19.0.0.jar" skipexisting="true" />
		<get src="${env.SRC}/annotations-19.0.0-javadoc.jar" dest="${env.LIB}/annotations-19.0.0-javadoc.jar" skipexisting="true" />
		<get src="${env.SRC}/annotations-19.0.0-sources.jar" dest="${env.LIB}/annotations-19.0.0-sources.jar" skipexisting="true" />
		
		<get src="${env.SRC}/spigot-api-1.16.1-R0.1-SNAPSHOT.jar" dest="${env.LIB}/spigot.jar" skipexisting="true" />
		<get src="${env.SRC}/snakeyaml-1.9.jar" dest="${env.LIB}/snakeyaml-1.9.jar" skipexisting="true" />

	</target>

	<target name="compile" depends="download">
		<!-- Compile the java code -->
		<javac srcdir="src" destdir="${build}" includeantruntime="false" target="1.8" source="1.8" debug="true" debuglevel="lines,vars,source">
			<classpath>
				<pathelement location="${env.LIB}/annotations-19.0.0.jar" />
				<pathelement location="${env.LIB}/spigot.jar" />
				<pathelement location="${env.LIB}/snakeyaml-1.9.jar" />
			</classpath>
		</javac>
	</target>

	<target name="jar" depends="compile">
		<copy todir="${build}" >  
		    <fileset dir="./resources" includes="**" />
		</copy>
		<!-- Update the version in the plugin.yml -->
		<replace file="${build}/plugin.yml" token="{BUILD_VER}" value="${env.TOWNY_BUILD_VER}"/>
		<!-- Build the jar file -->
		<jar basedir="${build}" destfile="${env.LIB}/GroupManager.jar">
			<fileset dir="./src" />
		</jar>
		<!-- Copy the jar file to a test server -->
		<copy file="${env.LIB}/GroupManager.jar" tofile="${env.TEST}\plugins\GroupManager.jar" overwrite="true" />
	</target>
</project>